{"version":3,"sources":["components/Screens/Consumption/FreshPowder/utilities/LineChart.js","assets/svg/bigBag.svg","assets/svg/powderFeed.svg","components/Screens/Consumption/FreshPowder/utilities/props.js","components/Screens/Consumption/FreshPowder/utilities/handlersServer.js","components/Screens/Consumption/FreshPowder/FreshPowder.js","components/UI/Dropdown/Dropdown.js","components/UI/Dropdown/Dropdown.module.css","assets/svg/total.svg","assets/svg/freshPowder.svg","components/UI/Deck/CustomDeck/CustomDeck_2/CustomDeck_2.js","components/UI/Deck/CustomDeck/CustomDeck_2/CustomDeck_2.module.css","components/Screens/Consumption/FreshPowder/FreshPowder.module.css"],"names":["layoutTFP","colors","enableArea","translateX","xtitle","ytitle","layoutSHD","layoutBB","LineChart","layout","data","id","defaultLineData","x","Date","toISOString","y","lineData","length","Line","_extends","Object","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","className","d","_ref4","width","height","SvgBigBag","_ref","svgRef","title","titleId","props","xmlns","viewBox","ref","ForwardRef","SvgPowderFeed","propsTitleBarTFPT","icon","type","propsTitleBarTFPD","propsTitleBarSHDT","propsTitleBarSHDD","controlBarVisibility","propsTitleBarBBT","propsTitleBarBBD","propsToasterDanger","description","numberOfBigBags","_","range","map","el","text","value","getEndpoint","currentValueDropdown","timeRange","endpoint","getFilename","filename","connectServer","a","timeRangeIsArray","Array","filteredData","connectAPI","get","axiosFreshPowder","toaster","danger","console","error","post","processDataFromServer","dataFromServer","dataDeck","processDataDeck","run","dataTrend","currentData","getDataForDropdown","fallback","response","FreshPowder","optionsDropdownBB","state","api","dataBBD","average","avgTimeRange","avgPrevTimeRange","total","totalTimeRange","totalPrevTimeRange","dataSHDD","dataTFPD","dataBBT","dataSHDT","dataTFPT","currentTimeRange","currentTimeRangeTFPD","currentTimeRangeBBT","currentTimeRangeSHDT","currentTimeRangeTFPT","currentValueDropdownBBT","updateDropdownState","e","setState","prevState","dropdownSelector","nextUpdate","updateState","baseSelector","slice","dataTrendSelector","dataDeckSelector","dataSelector","getDataFromServer","createContextValues","ids","baseContextValue","fallbackOptionsDropdown","updateDataOnScreen","timerID","setInterval","clearInterval","Promise","all","valueDropdown","contextValue","DeckTFPD","units","orientation","DeckSHDD","DeckBBD","DropdownBB","Dropdown","options","LineChartBBT","LineChartSHDT","LineChartTFPT","styles","freshPowder","top","trendBox","GraphContext","Provider","GraphContainer","graph","deckBox","bottom","prx","join","dropdown","Component","ControlledDropdown","useContext","placeholder","selection","onChange","module","exports","_ref2","_ref3","points","SvgTotal","SvgFreshPowder","setFooterLabel","setFooterValue","Deck","customStyle","horizontalDeck","verticalDeck","configDeck","label","previousValue","cardBox"],"mappings":"uPAeMA,EAAY,CAChBC,OAAQ,UACRC,YAAY,EACZC,YAAa,GACbC,OAAQ,OACRC,OAAQ,eAMJC,EAAY,CAChBL,OAAQ,UACRC,YAAY,EACZC,YAAa,GACbC,OAAQ,OACRC,OAAQ,eAMJE,EAAW,CACfN,OAAQ,UACRC,YAAY,EACZC,YAAa,GACbC,OAAQ,OACRC,OAAQ,eAsCKG,EA9BG,SAAC,GAAkB,IAC/BC,EADeC,EAAe,EAAfA,KAAMC,EAAS,EAATA,GAQd,SAAPA,IAAeF,EAAST,GACjB,SAAPW,IAAeF,EAASH,GACjB,QAAPK,IAAcF,EAASF,GAE3B,IAAMK,EAAkB,CACtB,CACED,KACAD,KAAM,CAAC,CAAEG,GAAG,IAAIC,MAAOC,cAAeC,EAAG,MAQvCC,EADwC,oBAAhBP,EAAK,GAAGA,MAAuBA,EAAK,GAAGA,KAAKQ,OAAS,EAClDR,EAAOE,EAExC,OACE,cAACO,EAAA,EAAD,2BAAUV,GAAV,IAAkBC,KAAMO,M,iFC5E5B,SAASG,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUP,OAAQM,IAAK,CAAE,IAAIE,EAASD,UAAUD,GAAI,IAAK,IAAIG,KAAOD,EAAcL,OAAOO,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQJ,EAAOI,GAAOD,EAAOC,IAAY,OAAOJ,IAA2BQ,MAAMC,KAAMP,WAEhT,SAASQ,EAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKH,EAAnED,EAEzF,SAAuCG,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKH,EAA5DD,EAAS,GAAQY,EAAad,OAAOe,KAAKV,GAAqB,IAAKF,EAAI,EAAGA,EAAIW,EAAWjB,OAAQM,IAAOG,EAAMQ,EAAWX,GAAQU,EAASG,QAAQV,IAAQ,IAAaJ,EAAOI,GAAOD,EAAOC,IAAQ,OAAOJ,EAFxMe,CAA8BZ,EAAQQ,GAAuB,GAAIb,OAAOkB,sBAAuB,CAAE,IAAIC,EAAmBnB,OAAOkB,sBAAsBb,GAAS,IAAKF,EAAI,EAAGA,EAAIgB,EAAiBtB,OAAQM,IAAOG,EAAMa,EAAiBhB,GAAQU,EAASG,QAAQV,IAAQ,GAAkBN,OAAOO,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBJ,EAAOI,GAAOD,EAAOC,IAAU,OAAOJ,EAMne,IAAI,EAAqB,gBAAoB,OAAQ,KAAmB,gBAAoB,QAAS,KAAM,4CAEvG,EAAqB,gBAAoB,OAAQ,CACnDmB,UAAW,QACXC,EAAG,obAGDC,EAAqB,gBAAoB,OAAQ,CACnDF,UAAW,QACXG,MAAO,GACPC,OAAQ,KAGV,SAASC,EAAUC,EAAMC,GACvB,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACfC,EAAQnB,EAAyBe,EAAM,CAAC,QAAS,YAErD,OAAoB,gBAAoB,MAAO5B,EAAS,CACtDT,GAAI,UACJ,YAAa,UACb0C,MAAO,6BACPC,QAAS,YACTC,IAAKN,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DvC,GAAIwC,GACHD,GAAS,KAAM,EAAO,EAAON,GAGlC,IAAIY,EAA0B,aAAiBT,GAChC,ICvCf,SAAS,IAA2Q,OAA9P,EAAW1B,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUP,OAAQM,IAAK,CAAE,IAAIE,EAASD,UAAUD,GAAI,IAAK,IAAIG,KAAOD,EAAcL,OAAOO,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQJ,EAAOI,GAAOD,EAAOC,IAAY,OAAOJ,IAA2BQ,MAAMC,KAAMP,WAEhT,SAAS,EAAyBC,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKH,EAAnED,EAEzF,SAAuCG,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKH,EAA5DD,EAAS,GAAQY,EAAad,OAAOe,KAAKV,GAAqB,IAAKF,EAAI,EAAGA,EAAIW,EAAWjB,OAAQM,IAAOG,EAAMQ,EAAWX,GAAQU,EAASG,QAAQV,IAAQ,IAAaJ,EAAOI,GAAOD,EAAOC,IAAQ,OAAOJ,EAFxM,CAA8BG,EAAQQ,GAAuB,GAAIb,OAAOkB,sBAAuB,CAAE,IAAIC,EAAmBnB,OAAOkB,sBAAsBb,GAAS,IAAKF,EAAI,EAAGA,EAAIgB,EAAiBtB,OAAQM,IAAOG,EAAMa,EAAiBhB,GAAQU,EAASG,QAAQV,IAAQ,GAAkBN,OAAOO,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBJ,EAAOI,GAAOD,EAAOC,IAAU,OAAOJ,EAMne,IAAI,EAAqB,gBAAoB,OAAQ,KAAmB,gBAAoB,QAAS,KAAM,4CAEvG,EAAqB,gBAAoB,OAAQ,CACnDmB,UAAW,QACXC,EAAG,8oBAGD,EAAqB,gBAAoB,OAAQ,CACnDD,UAAW,QACXG,MAAO,GACPC,OAAQ,KAGV,SAASW,EAAcT,EAAMC,GAC3B,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACfC,EAAQ,EAAyBJ,EAAM,CAAC,QAAS,YAErD,OAAoB,gBAAoB,MAAO,EAAS,CACtDrC,GAAI,UACJ,YAAa,UACb0C,MAAO,6BACPC,QAAS,YACTC,IAAKN,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DvC,GAAIwC,GACHD,GAAS,KAAM,EAAO,EAAO,GAGlC,IAAI,EAA0B,aAAiBO,G,GAChC,I,0BCjBFC,EAAoB,CAC/BC,KAAM,cAAC,IAAD,IACNT,MAAO,qBACPU,KAAM,GAOKC,EAAoB,CAC/BF,KAAM,cAAC,IAAD,IACNT,MAAO,qBACPU,KAAM,GAOKE,EAAoB,CAC/BH,KAAM,cAAC,EAAD,IACNT,MAAO,cACPU,KAAM,GAOKG,EAAoB,CAC/BJ,KAAM,cAAC,EAAD,IACNT,MAAO,cACPc,sBAAsB,EACtBJ,KAAM,GAOKK,EAAmB,CAC9BN,KAAM,cAAC,EAAD,IACNT,MAAO,UACPU,KAAM,GAOKM,EAAmB,CAC9BP,KAAM,cAAC,EAAD,IACNT,MAAO,UACPc,sBAAsB,EACtBJ,KAAM,GAMMO,GAAqB,CACjC,QACA,CACEC,YAAa,6BAQXC,GAAkBC,IAAEC,MAAM,EAAG,G,IAETD,IAAEE,IAAIH,IADH,SAAAI,GAAE,MAAK,CAAE9C,IAAK8C,EAAIC,KAAK,MAAD,OAAQD,GAAME,MAAOF,M,SCnFlEG,GAAc,SAACC,EAAsBlE,EAAImE,GAC7C,IAAIC,EACJ,OAAQpE,GACN,IAAK,OACHoE,EAAQ,iBAAaD,GACrB,MACF,IAAK,OACHC,EAAQ,sBAAkBD,GAC1B,MACF,IAAK,OACHC,EAAQ,yBAAqBD,GAC7B,MACF,IAAK,MACHC,EAAQ,kBAAcF,EAAd,iBAA2CC,GAKvD,OAAOC,GAQHC,GAAc,SAACH,EAAsBlE,GACzC,IAAIsE,EACJ,OAAQtE,GACN,IAAK,OACL,IAAK,OACHsE,EAAW,yBACX,MACF,IAAK,OACHA,EAAW,sBACX,MACF,IAAK,MACHA,EAAQ,yBAAqBJ,EAArB,QAKZ,OAAOI,GASHC,GAAa,uCAAG,WAAOL,EAAsBlE,EAAImE,GAAjC,uBAAAK,EAAA,yDAIdC,EAAmBN,aAAqBO,QACC,kBAAdP,GALb,wBAWZC,EAAWH,GAAYC,EAAsBlE,EAAImE,GACnDQ,GAAe,EAZD,kBAcKC,IAAWC,IAAIC,IAAkBV,GAdtC,OAchBO,EAdgB,yDAgBhBI,KAAQC,OAAR,MAAAD,KAAO,YAAWvB,KAClByB,QAAQC,MAAM,uDAjBE,iCAmBXP,GAnBW,YAyBhBF,EAzBgB,wBA0BZH,EAAWD,GAAYH,EAAsBlE,GAC/C2E,GAAe,EA3BD,oBA6BKC,IAAWO,KAAKL,IAAkB,IAAK,CAAER,WAAUH,cA7BxD,QA6BhBQ,EA7BgB,0DA+BhBI,KAAQC,OAAR,MAAAD,KAAO,YAAWvB,KAClByB,QAAQC,MAAM,wDAhCE,iCAkCXP,GAlCW,kEAAH,0DA6DJS,GAlBY,uCAAG,WAAOlB,EAAsBlE,EAAImE,GAAjC,iBAAAK,EAAA,sEAECD,GAAcL,EAAsBlE,EAAImE,GAFzC,UAEtBkB,EAFsB,OAIjB,SAAPrF,EAJwB,yCAKnBqF,GALmB,UAQtBC,EAAWC,IAAgBC,IAAIH,EAAgBlB,EAAW,GACrD,SAAPnE,EATwB,yCAUnBsF,GAVmB,UAajB,SAAPtF,GAAwB,QAAPA,EAbO,0CAcnB,CAAEyF,UAAWH,EAASI,YAAaJ,aAdhB,4CAAH,0DAoBdK,GAAkB,uCAAG,WAAO3F,EAAI4F,GAAX,eAAApB,EAAA,6DAC5BqB,GAAW,EADiB,kBAGbf,IAAiBD,IAAjB,qBAAmC7E,IAHtB,OAG9B6F,EAH8B,8DAK9BZ,QAAQC,MAAM,4DALgB,kBAMvBU,GANuB,iCASzBC,EAAS9F,MATgB,yDAAH,wDC1GzB+F,G,4MAKJC,kBAAoB,CAAC,CAAE/E,IAAK,EAAG+C,KAAK,MAAQC,MAAO,I,EAUnDgC,MAAQ,CACNC,IAAK,CACHC,QAAS,CACPC,QAAS,CACPC,aAAc,EACdC,iBAAkB,GAEpBC,MAAO,CACLC,eAAgB,EAChBC,mBAAoB,IAGxBC,SAAU,CACRN,QAAS,CACPC,aAAc,EACdC,iBAAkB,GAEpBC,MAAO,CACLC,eAAgB,EAChBC,mBAAoB,IAGxBE,SAAU,CACRP,QAAS,CACPC,aAAc,EACdC,iBAAkB,GAEpBC,MAAO,CACLC,eAAgB,EAChBC,mBAAoB,IAGxBG,QAAS,GACTC,SAAU,GACVC,SAAU,IAEZC,iBAAkB,CAChBC,qBAAsB,OACtBC,oBAAqB,OACrBC,qBAAsB,OACtBC,qBAAsB,QAExBhD,qBAAsB,CACpBiD,wBAAyB,I,EAyD7BC,oBAAsB,SAACC,EAAD,EAAerH,GAAf,IAAMgE,EAAN,EAAMA,MAAN,OAAsB,EAAKsD,UAAS,SAAAC,GACxD,IAAMC,EAAgB,8BAA0BxH,GAC1CyH,EAAU,eAAQF,GAExB,OADAE,EAAWvD,qBAAqBsD,GAAoBxD,EAC7C,CAAEyD,kB,EASXC,YAAc,SAAC1H,EAAImE,EAAWkB,GAU5B,GARA,EAAKiC,UAAS,SAAAC,GACZ,IAAME,EAAU,eAAQF,GAClBT,EAAgB,0BAAsB9G,GAE5C,OADAyH,EAAWX,iBAAiBA,GAAoB3C,EACzC,CAAEsD,iBAIA,SAAPzH,GAAwB,QAAPA,EAAc,CACjC,IAAM2H,EAAe3H,EAAG4H,MAAM,EAAG5H,EAAGO,OAAS,GACvCsH,EAAiB,cAAU7H,GAC3B8H,EAAgB,cAAUH,EAAV,KAGtB,OAAO,EAAKL,UAAS,SAAAC,GACnB,IAAME,EAAU,eAAQF,GAGxB,OAFAE,EAAWxB,IAAI4B,GAAqBxC,EAAeI,UACnDgC,EAAWxB,IAAI6B,GAAoBzC,EAAeC,SAC3C,CAAEmC,iBAKb,EAAKH,UAAS,SAAAC,GACZ,IAAMQ,EAAY,cAAU/H,GACtByH,EAAU,eAAQF,GAExB,OADAE,EAAWxB,IAAI8B,GAAgB1C,EACxB,CAAEoC,kB,EASbO,kB,uCAAoB,WAAOhI,EAAImE,GAAX,iBAAAK,EAAA,6DAEZN,EAAuB,EAAK8B,MAAM9B,qBAAX,wBAFX,SAWWkB,GAAsBlB,EAAsBlE,EAAImE,GAX3D,OAWZkB,EAXY,OAclB,EAAKqC,YAAY1H,EAAImE,EAAWkB,GAdd,2C,0DAqBpB4C,oBAAsB,SAACC,GAAS,IACtBhE,EAAyB,EAAK8B,MAA9B9B,qBADqB,iBAGvBiE,EAAmB,CAAEH,kBAHE,EAErBA,kBACsCZ,oBAHjB,EAEFA,qBAG3B,OAAOc,EAAIrE,KAAI,SAAA7D,GAAE,kCAEVmI,GAFU,IAGbnI,KACAkE,qBAAsBA,EAAqB,uBAAD,OAAwBlE,U,8FAlIxE,mCAAAwE,EAAA,6DAEQ4D,EAA0B,CAAC,CAAEpH,IAAK,EAAG+C,KAAK,MAAQC,MAAO,IAFjE,SAGiC2B,GAAmB,UAAWyC,GAH/D,OAGE/G,KAAK0E,kBAHP,OAME1E,KAAKgH,qBACLhH,KAAKiH,QAAUC,aAAY,kBAAM,EAAKF,uBAAsB,MAP9D,gD,wFAWA,WACEG,cAAcnH,KAAKiH,W,uEAGrB,oCAAA9D,EAAA,+DAEqDnD,KAAK2E,MAAhDc,EAFV,EAEUA,iBAAkB5C,EAF5B,EAE4BA,qBACpBgE,EAAM,CAAC,MAAO,OAAQ,OAAQ,QAHtC,SAMqBO,QAAQC,IAAIR,EAAIrE,IAAJ,uCAAQ,WAAO7D,GAAP,iBAAAwE,EAAA,6DAC/BmE,EAAgBzE,EAAqB,uBAAD,OAAwBlE,IAC5DmE,EAAY2C,EAAiB,mBAAD,OAAoB9G,IAFjB,SAGxBoF,GAAsBuD,EAAe3I,EAAImE,GAHjB,mFAAR,wDANjC,OAMQpE,EANR,OAaEsB,KAAKiG,SACH,CACErB,IACA,CACEC,QAASnG,EAAK,GAAGuF,SACjBqB,QAAS5G,EAAK,GAAG0F,UACjBgB,SAAU1G,EAAK,GAAGuF,SAClBsB,SAAU7G,EAAK,GAAG0F,UAClBiB,SAAU3G,EAAK,GACf8G,SAAU9G,EAAK,MAtBvB,gD,0EAwHA,WAAS,IAECkI,EAA2C5G,KAA3C4G,oBAAqBlC,EAAsB1E,KAAtB0E,kBAFtB,EAK8D1E,KAAK2E,MAAMC,IAAxEC,EALD,EAKCA,QAASS,EALV,EAKUA,QAASF,EALnB,EAKmBA,SAAUG,EAL7B,EAK6BA,SAAUF,EALvC,EAKuCA,SAAUG,EALjD,EAKiDA,SAGhDE,EAAyB1F,KAAK2E,MAAMc,iBAApCC,qBAIF6B,EAAeX,EADT,CAAC,OAAQ,OAAQ,OAAQ,QAI/BY,EAAW,cAAC,IAAD,CAAM9I,KAAM2G,EAAUvC,UAAW4C,EAAsB+B,MAAM,KAAKC,YAAY,MACzFC,EAAW,cAAC,IAAD,CAAMjJ,KAAM0G,EAAUtC,UAAW4C,EAAsB+B,MAAM,KAAKC,YAAY,MACzFE,EAAU,cAAC,IAAD,CAAMlJ,KAAMmG,EAAS/B,UAAW4C,EAAsB+B,MAAM,KAAKC,YAAY,MAIvFG,EAAa,cAACC,EAAA,EAAD,CAAUC,QAASrD,IAGhCsD,EAAe,cAAC,EAAD,CAAWrJ,GAAG,MAAMD,KAAM,CAAC,CAAEC,GAAI,gBAAiBD,KAAM4G,MACvE2C,EAAgB,cAAC,EAAD,CAAWtJ,GAAG,OAAOD,KAAM,CAAC,CAAEC,GAAI,aAAcD,KAAM6G,MACtE2C,EAAgB,cAAC,EAAD,CAAWvJ,GAAG,OAAOD,KAAM,CAAC,CAAEC,GAAI,eAAgBD,KAAM8G,MAE9E,OACE,sBAAK9E,UAAWyH,IAAOC,YAAvB,UACE,eAAC,IAAD,CAAK1H,UAAWyH,IAAOE,IAAvB,UACE,cAAC,IAAD,CAAK3H,UAAWyH,IAAOG,SAAvB,SACE,cAACC,EAAA,EAAaC,SAAd,CAAuB7F,MAAO4E,EAAa,GAA3C,SACE,cAACkB,EAAA,EAAD,2BAAoB/G,GAApB,IAAuCgH,MAAOR,SAIlD,cAACK,EAAA,EAAaC,SAAd,CAAuB7F,MAAO4E,EAAa,GAA3C,SACE,cAAC,IAAD,CAAK7G,UAAWyH,IAAOQ,QAAvB,SACE,cAACF,EAAA,EAAD,2BAAoB5G,GAApB,IAAuC6G,MAAOlB,YAKpD,eAAC,IAAD,CAAK9G,UAAWyH,IAAOS,OAAvB,UACE,cAAC,IAAD,CAAKlI,UAAWyH,IAAOG,SAAvB,SACE,cAACC,EAAA,EAAaC,SAAd,CAAuB7F,MAAO4E,EAAa,GAA3C,SACE,cAACkB,EAAA,EAAD,2BAAoB3G,GAApB,IAAuC4G,MAAOT,SAIlD,cAAC,IAAD,CAAKvH,UAAWyH,IAAOQ,QAAvB,SACE,cAACF,EAAA,EAAD,2BAAoB1G,GAApB,IAAuC2G,MAAOf,OAGhD,cAAC,IAAD,CAAKjH,UAAW,CAACyH,IAAOG,SAAUH,IAAOU,KAAKC,KAAK,KAAnD,SACE,cAACP,EAAA,EAAaC,SAAd,CAAuB7F,MAAO4E,EAAa,GAA3C,SACE,cAACkB,EAAA,EAAD,2BAAoBxG,GAApB,IAAsCyG,MAAOV,EAAce,SAAUlB,SAIzE,cAAC,IAAD,CAAKnH,UAAWyH,IAAOQ,QAAvB,SACE,cAACF,EAAA,EAAD,2BAAoBvG,GAApB,IAAsCwG,MAAOd,iB,GAvQ/BoB,aA+QXvE,c,iCCnSf,uDAsBewE,IAhBY,SAAC,GAAiB,IAAflB,EAAc,EAAdA,QAAc,EAEgBmB,qBAAWX,KAA7D5J,EAFkC,EAElCA,GAAIkE,EAF8B,EAE9BA,qBAAsBkD,EAFQ,EAERA,oBAElC,OACE,cAAC,IAAD,CACErF,UAAWyH,IAAOY,SAClBhB,QAASA,EACToB,YAAY,SACZC,WAAS,EACTC,SAAU,SAACrD,EAAD,OAAMrD,EAAN,EAAMA,MAAN,OAAkBoD,EAAoBC,EAAG,CAAErD,SAAShE,IAC9DgE,MAAOE,M,oBChBbyG,EAAOC,QAAU,CAAC,SAAW,6B,iCCD7B,sDAASnK,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUP,OAAQM,IAAK,CAAE,IAAIE,EAASD,UAAUD,GAAI,IAAK,IAAIG,KAAOD,EAAcL,OAAOO,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQJ,EAAOI,GAAOD,EAAOC,IAAY,OAAOJ,IAA2BQ,MAAMC,KAAMP,WAEhT,SAASQ,EAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKH,EAAnED,EAEzF,SAAuCG,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKH,EAA5DD,EAAS,GAAQY,EAAad,OAAOe,KAAKV,GAAqB,IAAKF,EAAI,EAAGA,EAAIW,EAAWjB,OAAQM,IAAOG,EAAMQ,EAAWX,GAAQU,EAASG,QAAQV,IAAQ,IAAaJ,EAAOI,GAAOD,EAAOC,IAAQ,OAAOJ,EAFxMe,CAA8BZ,EAAQQ,GAAuB,GAAIb,OAAOkB,sBAAuB,CAAE,IAAIC,EAAmBnB,OAAOkB,sBAAsBb,GAAS,IAAKF,EAAI,EAAGA,EAAIgB,EAAiBtB,OAAQM,IAAOG,EAAMa,EAAiBhB,GAAQU,EAASG,QAAQV,IAAQ,GAAkBN,OAAOO,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBJ,EAAOI,GAAOD,EAAOC,IAAU,OAAOJ,EAMne,IAAIiK,EAAqB,gBAAoB,OAAQ,KAAmB,gBAAoB,QAAS,KAAM,4CAEvGC,EAAqB,gBAAoB,UAAW,CACtD/I,UAAW,QACXgJ,OAAQ,sGAGN9I,EAAqB,gBAAoB,OAAQ,CACnDF,UAAW,QACXG,MAAO,GACPC,OAAQ,KAGV,SAAS6I,EAAS3I,EAAMC,GACtB,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACfC,EAAQnB,EAAyBe,EAAM,CAAC,QAAS,YAErD,OAAoB,gBAAoB,MAAO5B,EAAS,CACtDT,GAAI,UACJ,YAAa,UACb0C,MAAO,6BACPC,QAAS,YACTC,IAAKN,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DvC,GAAIwC,GACHD,GAAS,KAAMsI,EAAOC,EAAO7I,GAGlC,IAAIY,EAA0B,aAAiBmI,GAChC,K,iCCvCf,sDAASvK,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUP,OAAQM,IAAK,CAAE,IAAIE,EAASD,UAAUD,GAAI,IAAK,IAAIG,KAAOD,EAAcL,OAAOO,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQJ,EAAOI,GAAOD,EAAOC,IAAY,OAAOJ,IAA2BQ,MAAMC,KAAMP,WAEhT,SAASQ,EAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKH,EAAnED,EAEzF,SAAuCG,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKH,EAA5DD,EAAS,GAAQY,EAAad,OAAOe,KAAKV,GAAqB,IAAKF,EAAI,EAAGA,EAAIW,EAAWjB,OAAQM,IAAOG,EAAMQ,EAAWX,GAAQU,EAASG,QAAQV,IAAQ,IAAaJ,EAAOI,GAAOD,EAAOC,IAAQ,OAAOJ,EAFxMe,CAA8BZ,EAAQQ,GAAuB,GAAIb,OAAOkB,sBAAuB,CAAE,IAAIC,EAAmBnB,OAAOkB,sBAAsBb,GAAS,IAAKF,EAAI,EAAGA,EAAIgB,EAAiBtB,OAAQM,IAAOG,EAAMa,EAAiBhB,GAAQU,EAASG,QAAQV,IAAQ,GAAkBN,OAAOO,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBJ,EAAOI,GAAOD,EAAOC,IAAU,OAAOJ,EAMne,IAAIiK,EAAqB,gBAAoB,OAAQ,KAAmB,gBAAoB,QAAS,KAAM,4CAEvGC,EAAqB,gBAAoB,OAAQ,CACnD/I,UAAW,QACXC,EAAG,ouBAGDC,EAAqB,gBAAoB,OAAQ,CACnDF,UAAW,QACXG,MAAO,GACPC,OAAQ,KAGV,SAAS8I,EAAe5I,EAAMC,GAC5B,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACfC,EAAQnB,EAAyBe,EAAM,CAAC,QAAS,YAErD,OAAoB,gBAAoB,MAAO5B,EAAS,CACtDT,GAAI,UACJ,YAAa,UACb0C,MAAO,6BACPC,QAAS,YACTC,IAAKN,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DvC,GAAIwC,GACHD,GAAS,KAAMsI,EAAOC,EAAO7I,GAGlC,IAAIY,EAA0B,aAAiBoI,GAChC,K,iHC/BPC,EAAmC3F,IAAnC2F,eAAgBC,EAAmB5F,IAAnB4F,eA+DTC,IAvDF,SAAC,GAA6C,IAErDC,EAFUtL,EAA0C,EAA1CA,KAAMoE,EAAoC,EAApCA,UAAW2E,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAGlB,MAAhBA,IACFsC,EAAc7B,IAAO8B,gBAGH,MAAhBvC,IACFsC,EAAc7B,IAAO+B,cARiC,MAYbxL,EAAKoG,QAAxCC,EAZgD,EAYhDA,aAAcC,EAZkC,EAYlCA,iBAZkC,EAaTtG,EAAKuG,MAA5CC,EAbgD,EAahDA,eAAgBC,EAbgC,EAahCA,mBAOlBgF,EAAa,CACjB,CACExL,GAAI,QACJgD,KAAM,cAAC,IAAD,IACNyI,MAAOP,EAAe/G,EAAWoC,EAAgBC,GACjDkF,cAAeP,EAAehH,EAAWqC,EAAoBsC,GAC7DA,QACA9E,MAAOuC,GAET,CACEvG,GAAI,UACJgD,KAAM,cAAC,IAAD,IACNyI,MAAOP,EAAe/G,EAAWiC,EAAcC,GAC/CqF,cAAeP,EAAehH,EAAWkC,EAAkByC,GAC3DA,QACA9E,MAAOoC,IAKX,OACE,qBAAKrE,UAAWsJ,EAAhB,SAEIG,EAAW3H,KAAI,SAAAC,GAAE,OACf,qBACE/B,UAAWyH,IAAOmC,QADpB,SAIE,cAAC,IAAD,eAAU7H,KAFLA,EAAG9D,W,oBC7DpB2K,EAAOC,QAAU,CAAC,eAAiB,qCAAqC,QAAU,8BAA8B,aAAe,qC,oBCA/HD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,IAAM,yBAAyB,SAAW,8BAA8B,QAAU,6BAA6B,OAAS,4BAA4B,IAAM","file":"static/js/18.40c47a37.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Line from \"../../../../UI/Graph/Line/Line\";\r\n\r\n/**\r\n * General notes:\r\n * The following objects are used to\r\n * customize graph templates (Line, \r\n * Bar, Pie), which can be found in the \r\n * UI folder. The graph templates are \r\n * based on nivo library ;)\r\n */\r\n\r\n/**\r\n * [layoutTFP]: Layout for total fresh powder trend\r\n */\r\nconst layoutTFP = {\r\n  colors: \"#86a315\",\r\n  enableArea: false,\r\n  translateX: -30,\r\n  xtitle: \"Date\",\r\n  ytitle: \"Powder (kg)\"\r\n};\r\n\r\n/**\r\n * [layoutSHD]: Layout for Spectrum HD trend\r\n */\r\nconst layoutSHD = {\r\n  colors: \"#e37222\",\r\n  enableArea: false,\r\n  translateX: -30,\r\n  xtitle: \"Date\",\r\n  ytitle: \"Powder (kg)\"\r\n};\r\n\r\n/**\r\n * [layoutBB]: Layout for bigbag trend\r\n */\r\nconst layoutBB = {\r\n  colors: \"#6f1c75\",\r\n  enableArea: false,\r\n  translateX: -30,\r\n  xtitle: \"Date\",\r\n  ytitle: \"Powder (kg)\"\r\n};\r\n\r\n/**\r\n * [CustomChart]: Creates a line chart using different layouts (see above)\r\n * [data]: Data for line chart\r\n * [id]: It's used to switch between layouts\r\n */\r\nconst LineChart = ({ data, id }) => {\r\n  let layout;\r\n\r\n  /**\r\n   * TFPT: Total fresh powder trend\r\n   * SHDT: Spectrum HD trend \r\n   * BBT: Bigbag feeder trend\r\n   */\r\n  if (id === \"TFPT\") layout = layoutTFP;\r\n  if (id === \"SHDT\") layout = layoutSHD;\r\n  if (id === \"BBT\") layout = layoutBB;\r\n\r\n  const defaultLineData = [\r\n    {\r\n      id,\r\n      data: [{ x: new Date().toISOString(), y: 0 }]\r\n    }\r\n  ];\r\n\r\n /**\r\n   *  If express server provides no data, then use the default one.\r\n   */\r\n  const useDefaultData = typeof data[0].data != \"undefined\" && data[0].data.length > 0;\r\n  const lineData = useDefaultData? data : defaultLineData;\r\n\r\n  return (\r\n    <Line {...layout} data={lineData} />\r\n  );\r\n};\r\n\r\nexport default LineChart;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \".cls-1{fill:#005293;}.cls-2{fill:none;}\"));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-1\",\n  d: \"M26,6a1,1,0,0,0-1,1V8.41l-8-4V3a1,1,0,0,0-2,0V4.41l-8,4V7A1,1,0,0,0,5,7V21A4.51,4.51,0,0,0,7.19,24.9l7,4.19A3.45,3.45,0,0,0,16,29.6a3.58,3.58,0,0,0,1.83-.51l7-4.19A4.55,4.55,0,0,0,27,21V7A1,1,0,0,0,26,6ZM16,12a1,1,0,0,0-1,1v1.23L8.08,10.11l7.92-4,7.92,4L17,14.26V13A1,1,0,0,0,16,12ZM8.22,23.2A2.53,2.53,0,0,1,7,21V11.8l8,4.8V27a1.28,1.28,0,0,0,.05.27Zm15.55,0L17,27.3A1.22,1.22,0,0,0,17,27V16.6l8-4.8V21A2.54,2.54,0,0,1,23.77,23.2Z\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"rect\", {\n  className: \"cls-2\",\n  width: 32,\n  height: 32\n});\n\nfunction SvgBigBag(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Ebene_1\",\n    \"data-name\": \"Ebene 1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 32 32\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBigBag);\nexport default __webpack_public_path__ + \"static/media/bigBag.5a6dae6f.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \".cls-1{fill:#005293;}.cls-2{fill:none;}\"));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-1\",\n  d: \"M28,11a.21.21,0,0,0,0-.11.61.61,0,0,0,0-.19v-.06a.75.75,0,0,0-.07-.12l-.11-.16-.16-.13-.09-.08L19,5.41V3a1,1,0,0,0-1-1H14a1,1,0,0,0-1,1V5.41L4.51,10.13l-.09.08-.16.13a.91.91,0,0,0-.11.16l-.07.12v.06a.61.61,0,0,0,0,.19A.57.57,0,0,0,4,11V27a1.17,1.17,0,0,0,.08.36A1.11,1.11,0,0,0,5,28H27.07a1.08,1.08,0,0,0,.31-.07,1,1,0,0,0,.54-.54A1,1,0,0,0,28,27ZM16,21c-4.24,0-7.95,2.27-10,3.84V13.16C8.05,14.73,11.76,17,16,17s8-2.27,10-3.84V24.84C24,23.27,20.24,21,16,21Zm8.19,5H7.81A14.85,14.85,0,0,1,16,23,14.85,14.85,0,0,1,24.19,26ZM7.81,12H24.19A14.85,14.85,0,0,1,16,15,14.85,14.85,0,0,1,7.81,12Zm6.68-5.13A1,1,0,0,0,15,6V4h2V6a1,1,0,0,0,.51.87L23.14,10H8.86Z\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"rect\", {\n  className: \"cls-2\",\n  width: 32,\n  height: 32\n});\n\nfunction SvgPowderFeed(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Ebene_1\",\n    \"data-name\": \"Ebene 1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 32 32\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPowderFeed);\nexport default __webpack_public_path__ + \"static/media/powderFeed.10539001.svg\";\nexport { ForwardRef as ReactComponent };","import { ReactComponent as BigBag } from \"../../../../../assets/svg/bigBag.svg\";\r\nimport { ReactComponent as FeedPowder } from \"../../../../../assets/svg/powderFeed.svg\";\r\nimport { ReactComponent as FreshPowder } from \"../../../../../assets/svg/freshPowder.svg\";\r\n\r\nimport _ from \"lodash\";\r\n\r\n/**\r\n * General notes:\r\n * The following objects are used to give proper \r\n * customization to the title bar contained in the \r\n * \"GraphContainer\". I do this in a separate file \r\n * because I don't want to populate the main flow \r\n * of the screen with configuration data for inner\r\n * components. The title bar element can receive \r\n * icons, description text, and dropdown elements \r\n * based on the provided type\r\n */\r\n\r\n/**\r\n * [propsTitleBarTFPT]: Title bar in total fresh powder trend\r\n * Title bar: Icon and description text (type 1)\r\n */\r\nexport const propsTitleBarTFPT = {\r\n  icon: <FreshPowder />,\r\n  title: \"Total fresh powder\",\r\n  type: 1\r\n}\r\n\r\n/**\r\n * [propsTitleBarTFPD]: Title bar in total fresh powder deck\r\n * Title bar: Icon and description text (type 1)\r\n */\r\nexport const propsTitleBarTFPD = {\r\n  icon: <FreshPowder />,\r\n  title: \"Total fresh powder\",\r\n  type: 1\r\n};\r\n\r\n/**\r\n * [propsTitleBarSHDT]: Title bar in spectrum hd trend\r\n * Title bar: Icon and description text (type 1)\r\n */\r\nexport const propsTitleBarSHDT = {\r\n  icon: <FeedPowder />,\r\n  title: \"Spectrum HD\",\r\n  type: 1\r\n};\r\n\r\n/**\r\n * [propsTitleBarSHDD]: Title bar in spectrum hd deck\r\n * Title bar: Icon and description text (type 1)\r\n */\r\nexport const propsTitleBarSHDD = {\r\n  icon: <FeedPowder />,\r\n  title: \"Spectrum HD\",\r\n  controlBarVisibility: false,\r\n  type: 1\r\n};\r\n\r\n/**\r\n * [propsTitleBarBBT]: Title bar in bigbag trend\r\n * Title bar: Icon, description text and dropdown (type 3)\r\n */\r\nexport const propsTitleBarBBT = {\r\n  icon: <BigBag />,\r\n  title: \"Big bag\",\r\n  type: 3\r\n};\r\n\r\n/**\r\n * [propsTitleBarBBD]: Title bar in bigbag deck\r\n * Title bar: Icon and description text (type 1)\r\n */\r\nexport const propsTitleBarBBD = {\r\n  icon: <BigBag />,\r\n  title: \"Big Bag\",\r\n  controlBarVisibility: false,\r\n  type: 1\r\n};\r\n\r\n/**\r\n * [propsToasterDanger]: Alert configuration if API request fails\r\n */\r\n export const propsToasterDanger = [\r\n  \"Error\",\r\n  {\r\n    description: \"Sensor device not found.\"\r\n  }\r\n];\r\n\r\n/**\r\n * [propsDropdownBB]: Bigbag - dropdown options\r\n */\r\n// Text value should be customized\r\nconst numberOfBigBags = _.range(1, 7);\r\nconst createOptionDropdown = el => ({ key: el, text: `BB-${el}`, value: el });\r\nconst dropdownOptionsBB = _.map(numberOfBigBags, createOptionDropdown);\r\nexport const propsDropdownBB = { options: dropdownOptionsBB };\r\n","import connectAPI from \"../../../../../api/connectAPI\";\r\nimport processDataDeck from \"../../../../../utils/processDataDeck\";\r\nimport { axiosFreshPowder } from \"../../../../../api/axios\";\r\nimport { propsToasterDanger } from \"./props\";\r\nimport { toaster } from \"evergreen-ui\";\r\n\r\n/**\r\n * This function works in conjuction with HTTP GET requests\r\n * @param {*} id Helps to determine the endpoint for API requests\r\n * @param {*} timeRange String with value of either \"day\", \"week\", \"month\"\r\n * @returns String containing the API endpoint\r\n */\r\nconst getEndpoint = (currentValueDropdown, id, timeRange) => {\r\n  let endpoint;\r\n  switch (id) {\r\n    case \"TFPT\":\r\n      endpoint = `/total/${timeRange}`;\r\n      break;\r\n    case \"TFPD\":\r\n      endpoint = `/total/deck-${timeRange}`;\r\n      break;\r\n    case \"SHDT\":\r\n      endpoint = `/spectrum/deck-${timeRange}`;\r\n      break;\r\n    case \"BBT\":\r\n      endpoint = `/bigbag/${currentValueDropdown}/deck-${timeRange}`;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return endpoint;\r\n};\r\n\r\n/**\r\n * This function works in conjuction with HTTP POST requests\r\n * @param {*} id Helps to determine the filename for API requests\r\n * @returns \r\n */\r\nconst getFilename = (currentValueDropdown, id) => {\r\n  let filename;\r\n  switch (id) {\r\n    case \"TFPD\":\r\n    case \"TFPT\":\r\n      filename = \"powder_total_fresh.csv\";\r\n      break;\r\n    case \"SHDT\":\r\n      filename = \"powder_spectrum.csv\";\r\n      break;\r\n    case \"BBT\":\r\n      filename = `powder_big_bag_${currentValueDropdown}.csv`;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return filename;\r\n};\r\n\r\n/**\r\n * \r\n * @param {*} id Helps to determine either the endpoint or filename for API requests\r\n * @param {*} timeRange String or array of two \"moment\" objects\r\n * @returns Data to feed line chart according to \"nivo\" library\r\n */\r\nconst connectServer = async (currentValueDropdown, id, timeRange) => {\r\n  /**\r\n   * Check is request comes from a control button or date picker\r\n   */\r\n  const timeRangeIsArray = timeRange instanceof Array;\r\n  const timeRangeIsString = typeof timeRange === \"string\";\r\n\r\n  /**\r\n   * If control button, then triggers HTTP GET requests\r\n   */\r\n  if (timeRangeIsString) {\r\n    const endpoint = getEndpoint(currentValueDropdown, id, timeRange);\r\n    let filteredData = false;\r\n    try {\r\n      filteredData = await connectAPI.get(axiosFreshPowder, endpoint);\r\n    } catch (err) {\r\n      toaster.danger(...propsToasterDanger);\r\n      console.error(\"[connectServer]: Request to server API failed (GET)\");\r\n    }\r\n    return filteredData;\r\n  }\r\n\r\n  /**\r\n  * If date picker, then triggers HTTP POST requests\r\n  */\r\n  if (timeRangeIsArray) {\r\n    const filename = getFilename(currentValueDropdown, id);\r\n    let filteredData = false;\r\n    try {\r\n      filteredData = await connectAPI.post(axiosFreshPowder, \"/\", { filename, timeRange })\r\n    } catch (error) {\r\n      toaster.danger(...propsToasterDanger);\r\n      console.error(\"[connectServer]: Request to server API failed (POST)\");\r\n    }\r\n    return filteredData;\r\n  }\r\n};\r\n\r\n/**\r\n * Data from server is either for \"trend\" or \"deck\" elements\r\n * If data is for a \"deck\" element, then further processing is needed\r\n * If data is for a \"trend\" element, then it goes straight forward\r\n */\r\nconst processDataFromServer = async (currentValueDropdown, id, timeRange) => {\r\n\r\n  const dataFromServer = await connectServer(currentValueDropdown, id, timeRange);\r\n\r\n  if (id === \"TFPT\") {\r\n    return dataFromServer;\r\n  }\r\n\r\n  const dataDeck = processDataDeck.run(dataFromServer, timeRange, 2);\r\n  if (id === \"TFPD\") {\r\n    return dataDeck;\r\n  }\r\n\r\n  if (id === \"SHDT\" || id === \"BBT\") {\r\n    return { dataTrend: dataDeck.currentData, dataDeck };\r\n  }\r\n};\r\n\r\nexport default processDataFromServer;\r\n\r\nexport const getDataForDropdown = async (id, fallback) => {\r\n  let response = false;\r\n  try {\r\n    response = await axiosFreshPowder.get(`/dropdowns/${id}`);\r\n  } catch (error) {\r\n    console.error(\"[getDataForDropdown]: Request to server API failed (GET)\");\r\n    return fallback;\r\n  }\r\n\r\n  return response.data;\r\n};","import React, { Component } from 'react';\r\nimport Deck from \"../../../UI/Deck/CustomDeck/CustomDeck_2/CustomDeck_2\";\r\nimport Dropdown from \"../../../UI/Dropdown/Dropdown\";\r\nimport GraphContainer from \"../../../Container/GraphContainer\";\r\nimport LineChart from \"./utilities/LineChart\";\r\nimport GraphContext from \"../../../Context/GraphContext\";\r\nimport { Row, Col } from \"antd\";\r\n\r\nimport styles from \"./FreshPowder.module.css\";\r\nimport processDataFromServer, { getDataForDropdown } from \"./utilities/handlersServer\";\r\nimport {\r\n  propsDropdownBB,\r\n  propsTitleBarBBT,\r\n  propsTitleBarBBD,\r\n  propsTitleBarSHDT,\r\n  propsTitleBarSHDD,\r\n  propsTitleBarTFPT,\r\n  propsTitleBarTFPD,\r\n} from \"./utilities/props\";\r\n\r\nclass FreshPowder extends Component {\r\n  /**\r\n   * Class fields (Belong to the class itself. Prototype chain not affected) \r\n   * These fields are used by the server to set options for dropdown elements\r\n   */\r\n  optionsDropdownBB = [{ key: 1, text: `BB1`, value: 1 }];\r\n\r\n  /**\r\n  * [api]: Contains received data from express server\r\n  * [currentTimeRange]: Contains selected time frame for trend and deck elements\r\n  * [currentValueDropdown]: Contains current value of dropdown for trend and deck elements\r\n  * [dataBBT, dataSHDT, dataTFPD, dataTFPT]: Holds data for \"powder_total_fresh.csv\", \r\n  * \"powder_spectrum.csv\", \"powder_big_bag_x.csv\"  \r\n  * The \"x\" represents the sensor location\r\n  */\r\n  state = {\r\n    api: {\r\n      dataBBD: {\r\n        average: {\r\n          avgTimeRange: 0,\r\n          avgPrevTimeRange: 0\r\n        },\r\n        total: {\r\n          totalTimeRange: 0,\r\n          totalPrevTimeRange: 0\r\n        }\r\n      },\r\n      dataSHDD: {\r\n        average: {\r\n          avgTimeRange: 0,\r\n          avgPrevTimeRange: 0\r\n        },\r\n        total: {\r\n          totalTimeRange: 0,\r\n          totalPrevTimeRange: 0\r\n        }\r\n      },\r\n      dataTFPD: {\r\n        average: {\r\n          avgTimeRange: 0,\r\n          avgPrevTimeRange: 0\r\n        },\r\n        total: {\r\n          totalTimeRange: 0,\r\n          totalPrevTimeRange: 0\r\n        },\r\n      },\r\n      dataBBT: [],\r\n      dataSHDT: [],\r\n      dataTFPT: []\r\n    },\r\n    currentTimeRange: {\r\n      currentTimeRangeTFPD: \"week\",\r\n      currentTimeRangeBBT: \"week\",\r\n      currentTimeRangeSHDT: \"week\",\r\n      currentTimeRangeTFPT: \"week\"\r\n    },\r\n    currentValueDropdown: {\r\n      currentValueDropdownBBT: 1\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 1. Fetch data when component mounts for the first time\r\n   * 2. Triggers automatic updates every \"x\" milliseconds\r\n   */\r\n  async componentDidMount() {\r\n    // Load options for dropdowns\r\n    const fallbackOptionsDropdown = [{ key: 1, text: `BB1`, value: 1 }];\r\n    this.optionsDropdownBB = await getDataForDropdown(\"bigbags\", fallbackOptionsDropdown);\r\n\r\n    // Set automatic updates\r\n    this.updateDataOnScreen();\r\n    this.timerID = setInterval(() => this.updateDataOnScreen(), 3600000);\r\n  }\r\n\r\n  // If component unmounts, then free memory resources\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n  async updateDataOnScreen() {\r\n    // Define id's to target all UI elements\r\n    const { currentTimeRange, currentValueDropdown } = this.state;\r\n    const ids = [\"BBT\", \"SHDT\", \"TFPD\", \"TFPT\"];\r\n\r\n    // // Get data for all elements\r\n    const data = await Promise.all(ids.map(async (id) => {\r\n      const valueDropdown = currentValueDropdown[`currentValueDropdown${id}`];\r\n      const timeRange = currentTimeRange[`currentTimeRange${id}`];\r\n      return await processDataFromServer(valueDropdown, id, timeRange);\r\n    }));\r\n\r\n    // Update state for all components\r\n    this.setState(\r\n      {\r\n        api:\r\n        {\r\n          dataBBD: data[0].dataDeck,\r\n          dataBBT: data[0].dataTrend,\r\n          dataSHDD: data[1].dataDeck,\r\n          dataSHDT: data[1].dataTrend,\r\n          dataTFPD: data[2],\r\n          dataTFPT: data[3]\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * [updateDropdownState]: Update value of dropdown element\r\n   * [id]: Helps to determine the correct dropdown element\r\n   * [value]: Value of dropdown element\r\n   * [e]: Synthetic event. The event is used internally by UI library \r\n   */\r\n  updateDropdownState = (e, { value }, id) => this.setState(prevState => {\r\n    const dropdownSelector = `currentValueDropdown${id}`;\r\n    const nextUpdate = { ...prevState };\r\n    nextUpdate.currentValueDropdown[dropdownSelector] = value;\r\n    return { nextUpdate };\r\n  })\r\n\r\n  /**\r\n   * \r\n   * @param {*} id Target element to update\r\n   * @param {*} dataFromServer Data from express server\r\n   * @param {*} timeRange Current time range for selected element\r\n   */\r\n  updateState = (id, timeRange, dataFromServer) => {\r\n    // Keep track of timeframe\r\n    this.setState(prevState => {\r\n      const nextUpdate = { ...prevState };\r\n      const currentTimeRange = `currentTimeRange${id}`;\r\n      nextUpdate.currentTimeRange[currentTimeRange] = timeRange;\r\n      return { nextUpdate };\r\n    });\r\n\r\n    // These id's must trigger data updates for their respective deck element (SHDD, BBD)\r\n    if (id === \"SHDT\" || id === \"BBT\") {\r\n      const baseSelector = id.slice(0, id.length - 1); // SHD, BB \r\n      const dataTrendSelector = `data${id}`; // SHDT, BBT\r\n      const dataDeckSelector = `data${baseSelector}D`; // SHDD, BBD\r\n\r\n      // Update state if SHDT, SHDT, BBD, BBT element and exit function\r\n      return this.setState(prevState => {\r\n        const nextUpdate = { ...prevState };\r\n        nextUpdate.api[dataTrendSelector] = dataFromServer.dataTrend;\r\n        nextUpdate.api[dataDeckSelector] = dataFromServer.dataDeck;\r\n        return { nextUpdate };\r\n      })\r\n    }\r\n\r\n    // Update state of TFPT, TFPD elements\r\n    this.setState(prevState => {\r\n      const dataSelector = `data${id}`;\r\n      const nextUpdate = { ...prevState };\r\n      nextUpdate.api[dataSelector] = dataFromServer;\r\n      return { nextUpdate };\r\n    });\r\n  };\r\n\r\n  /**\r\n   * [getDataFromServer]: Establish connection to express server via HTTP requests (GET, POST)\r\n   * [id]: Helps to determine the correct endpoint, filename and axios instance\r\n   * [timeRange]: It can be a string (\"day\", \"week\", \"month\") or an array of two \"moment\" objects\r\n   */\r\n  getDataFromServer = async (id, timeRange) => {\r\n    // Update value of selected dropdown\r\n    const currentValueDropdown = this.state.currentValueDropdown[\"currentValueDropdownBBT\"];\r\n\r\n    /**\r\n    * Response data from server API. The data is formatted \r\n    * based on nivo library. If an error comes up, then \r\n    * \"dataFromServer\" is \"false\". Though I can exit the \r\n    * function at this point, I'll let it continue. Trends and \r\n    * deck elements handle the event of no-data using fallback data \r\n    */\r\n    const dataFromServer = await processDataFromServer(currentValueDropdown, id, timeRange);\r\n\r\n    // Update state of all elements\r\n    this.updateState(id, timeRange, dataFromServer);\r\n  }\r\n\r\n  /**\r\n  * @param {*} ids Arrays of ids (i.e \"TFPT\", \"TFPD\", \"SHDT\", \"BBT\")\r\n  * @returns Array of context values for graphs\r\n  */\r\n  createContextValues = (ids) => {\r\n    const { currentValueDropdown } = this.state;\r\n    const { getDataFromServer, updateDropdownState } = this;\r\n    const baseContextValue = { getDataFromServer, updateDropdownState };\r\n\r\n    return ids.map(id => (\r\n      {\r\n        ...baseContextValue,\r\n        id,\r\n        currentValueDropdown: currentValueDropdown[`currentValueDropdown${id}`]\r\n      }\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    // Extract some class methods\r\n    const { createContextValues, optionsDropdownBB } = this;\r\n\r\n    // Data from express server\r\n    const { dataBBD, dataBBT, dataSHDD, dataSHDT, dataTFPD, dataTFPT } = this.state.api;\r\n\r\n    // Current time range for elements\r\n    const { currentTimeRangeTFPD } = this.state.currentTimeRange;\r\n\r\n    // Create context values\r\n    const ids = [\"TFPT\", \"TFPD\", \"SHDT\", \"BBT\"];\r\n    const contextValue = createContextValues(ids);\r\n\r\n    // Deck UI components\r\n    const DeckTFPD = <Deck data={dataTFPD} timeRange={currentTimeRangeTFPD} units=\"kg\" orientation=\"h\" />;\r\n    const DeckSHDD = <Deck data={dataSHDD} timeRange={currentTimeRangeTFPD} units=\"kg\" orientation=\"v\" />;\r\n    const DeckBBD = <Deck data={dataBBD} timeRange={currentTimeRangeTFPD} units=\"kg\" orientation=\"v\" />;\r\n\r\n    // Dropdown UI components\r\n    //const DropdownBB = <Dropdown {...propsDropdownBB} />;\r\n    const DropdownBB = <Dropdown options={optionsDropdownBB} />;\r\n\r\n    // Line chart UI components\r\n    const LineChartBBT = <LineChart id=\"BBT\" data={[{ id: \"Bigbag powder\", data: dataBBT }]} />\r\n    const LineChartSHDT = <LineChart id=\"SHDT\" data={[{ id: \"SHD powder\", data: dataSHDT }]} />\r\n    const LineChartTFPT = <LineChart id=\"TFPT\" data={[{ id: \"Total powder\", data: dataTFPT }]} />\r\n\r\n    return (\r\n      <div className={styles.freshPowder}>\r\n        <Row className={styles.top}>\r\n          <Col className={styles.trendBox}>\r\n            <GraphContext.Provider value={contextValue[0]}>\r\n              <GraphContainer {...propsTitleBarTFPT} graph={LineChartTFPT} />\r\n            </GraphContext.Provider>\r\n          </Col>\r\n\r\n          <GraphContext.Provider value={contextValue[1]}>\r\n            <Col className={styles.deckBox}>\r\n              <GraphContainer {...propsTitleBarTFPD} graph={DeckTFPD} />\r\n            </Col>\r\n          </GraphContext.Provider>\r\n        </Row>\r\n\r\n        <Row className={styles.bottom}>\r\n          <Col className={styles.trendBox}>\r\n            <GraphContext.Provider value={contextValue[2]}>\r\n              <GraphContainer {...propsTitleBarSHDT} graph={LineChartSHDT} />\r\n            </GraphContext.Provider>\r\n          </Col>\r\n\r\n          <Col className={styles.deckBox}>\r\n            <GraphContainer {...propsTitleBarSHDD} graph={DeckSHDD} />\r\n          </Col>\r\n\r\n          <Col className={[styles.trendBox, styles.prx].join(\" \")}>\r\n            <GraphContext.Provider value={contextValue[3]}>\r\n              <GraphContainer {...propsTitleBarBBT} graph={LineChartBBT} dropdown={DropdownBB} />\r\n            </GraphContext.Provider>\r\n          </Col>\r\n\r\n          <Col className={styles.deckBox}>\r\n            <GraphContainer {...propsTitleBarBBD} graph={DeckBBD} />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FreshPowder;","import React, { useContext } from \"react\";\r\nimport { Dropdown } from 'semantic-ui-react';\r\nimport GraphContext  from \"../../Context/GraphContext\";\r\n\r\nimport styles from \"./Dropdown.module.css\";\r\n\r\nconst ControlledDropdown = ({ options }) => {\r\n\r\n  const { id, currentValueDropdown, updateDropdownState } = useContext(GraphContext);\r\n\r\n  return (\r\n    <Dropdown\r\n      className={styles.dropdown}\r\n      options={options}\r\n      placeholder=\"Select\"\r\n      selection\r\n      onChange={(e, { value }) => updateDropdownState(e, { value }, id)}\r\n      value={currentValueDropdown}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ControlledDropdown;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown\":\"Dropdown_dropdown__37I9C\"};","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \".cls-1{fill:#005293;}.cls-2{fill:none;}\"));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"cls-1\",\n  points: \"26 28 4.89 28 14.71 16 4.89 4 26 4 26 9 24 9 24 6 9.11 6 17.29 16 9.11 26 24 26 24 23 26 23 26 28\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"rect\", {\n  className: \"cls-2\",\n  width: 32,\n  height: 32\n});\n\nfunction SvgTotal(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Ebene_1\",\n    \"data-name\": \"Ebene 1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 32 32\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTotal);\nexport default __webpack_public_path__ + \"static/media/total.8daf7d1c.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \".cls-1{fill:#005293;}.cls-2{fill:none;}\"));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-1\",\n  d: \"M27,12l1.56-1a1,1,0,0,0-.07-1.66l-9-5a1,1,0,0,0-1,0L16,5.87,13.55,4.24a1,1,0,0,0-1,0l-9,5a1,1,0,0,0-.41,1.35,1,1,0,0,0,.41.41l1.71.86L2.55,13.18a1,1,0,0,0-.41,1.35,1,1,0,0,0,.41.41l3.52,2a.83.83,0,0,0-.07.13V22.2a.67.67,0,0,0,0,.2.89.89,0,0,0,.08.17.91.91,0,0,0,.11.16l.16.13.09.08,9,5,.15.06h.09a1.06,1.06,0,0,0,.5,0h.09l.15-.06,9-5a1,1,0,0,0,.58-.87V16.9l3.52-2a1,1,0,0,0,.41-1.35,1,1,0,0,0-.41-.41ZM19.07,6.41l7,3.91L25,11.07,18,7.16ZM15,15.54l-5.94-3.3L15,8.94Zm2-6.6,5.94,3.3L17,15.54ZM13,6.41l1.13.75L7.47,10.85l-1.31-.61Zm-6,7,6.86,3.83L12,18.11,5.16,14.29Zm4.51,6.74a1,1,0,0,0,.94,0L15,18.86v6.68L8,21.65V18.16ZM24,21.65l-7,3.89V18.86l2.55,1.27a.88.88,0,0,0,.45.11,1,1,0,0,0,.49-.13L24,18.16Zm-4-3.54-1.86-.87L25,13.37l1.84.92Z\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"rect\", {\n  className: \"cls-2\",\n  width: 32,\n  height: 32\n});\n\nfunction SvgFreshPowder(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Ebene_1\",\n    \"data-name\": \"Ebene 1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 32 32\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFreshPowder);\nexport default __webpack_public_path__ + \"static/media/freshPowder.7d0c7512.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport Card from \"../../../Card/CardWithFooter/CardWithFooter\";\r\n\r\nimport processDataDeck from \"../../../../../utils/processDataDeck\";\r\nimport styles from \"./CustomDeck_2.module.css\";\r\nimport { ReactComponent as Total } from \"../../../../../assets/svg/total.svg\";\r\nimport { ReactComponent as Average } from \"../../../../../assets/svg/average.svg\";\r\n\r\nconst { setFooterLabel, setFooterValue } = processDataDeck;\r\n\r\n/**\r\n * This component renders card elements for\r\n * showing total and average values. It can \r\n * be found on the following screens:\r\n * \"Fresh powder\"\r\n */\r\nconst Deck = ({ data, timeRange, units, orientation }) => {\r\n  // Controlling how cards are displayed (horizontally or vertically)\r\n  let customStyle;\r\n  if (orientation === \"h\") {\r\n    customStyle = styles.horizontalDeck;\r\n  }\r\n\r\n  if (orientation === \"v\") {\r\n    customStyle = styles.verticalDeck;\r\n  }\r\n\r\n  // The structure \"data\" is defined by the \"state\" object of each \"Screen\" component\r\n  const { avgTimeRange, avgPrevTimeRange } = data.average;\r\n  const { totalTimeRange, totalPrevTimeRange } = data.total;\r\n\r\n  /**\r\n   *  Configuration for each \"Card\" element.\r\n   *  1st element: Total value\r\n   *  2nd element: Average value\r\n   */\r\n  const configDeck = [\r\n    {\r\n      id: \"total\",\r\n      icon: <Total />,\r\n      label: setFooterLabel(timeRange, totalTimeRange, totalPrevTimeRange),\r\n      previousValue: setFooterValue(timeRange, totalPrevTimeRange, units),\r\n      units,\r\n      value: totalTimeRange,\r\n    },\r\n    {\r\n      id: \"average\",\r\n      icon: <Average />,\r\n      label: setFooterLabel(timeRange, avgTimeRange, avgPrevTimeRange),\r\n      previousValue: setFooterValue(timeRange, avgPrevTimeRange, units),\r\n      units,\r\n      value: avgTimeRange,\r\n    },\r\n  ];\r\n\r\n  // Custom deck UI component\r\n  return (\r\n    <div className={customStyle}>\r\n      {\r\n        configDeck.map(el => (\r\n          <div\r\n            className={styles.cardBox}\r\n            key={el.id}\r\n          >\r\n            <Card {...el} />\r\n          </div>\r\n        ))\r\n      }\r\n    </div>\r\n  );\r\n};\r\nexport default Deck;\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"horizontalDeck\":\"CustomDeck_2_horizontalDeck__2vFQQ\",\"cardBox\":\"CustomDeck_2_cardBox__bTPC8\",\"verticalDeck\":\"CustomDeck_2_verticalDeck__eN4Hs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"freshPowder\":\"FreshPowder_freshPowder__1ho7M\",\"top\":\"FreshPowder_top__10E-S\",\"trendBox\":\"FreshPowder_trendBox__2r3xD\",\"deckBox\":\"FreshPowder_deckBox__2BdoY\",\"bottom\":\"FreshPowder_bottom__3nB-5\",\"prx\":\"FreshPowder_prx__2iSxk\"};"],"sourceRoot":""}