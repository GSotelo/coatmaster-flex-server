{"version":3,"sources":["components/Screens/Consumption/AirPressure/utilities/LineChart.js","assets/svg/pressureSensor.svg","components/Screens/Consumption/AirPressure/utilities/props.js","components/Screens/Consumption/AirPressure/utilities/handlersServer.js","components/Screens/Consumption/AirPressure/utilities/miscellaneous.js","components/Screens/Consumption/AirPressure/AirPressure.js","components/UI/Dropdown/Dropdown.js","components/UI/Dropdown/Dropdown.module.css","components/UI/Card/CardWithoutFooter/CardWithoutFooter.js","components/UI/Cards/HorizontalCards/HorizontalCards.js","assets/svg/peakHigh.svg","assets/svg/peakLow.svg","components/UI/Card/CustomCard/CustomCard_1.js","components/UI/Deck/CustomDeck/CustomDeck_1.js","components/Screens/Consumption/AirPressure/AirPressure.module.css"],"names":["layoutTopAPT","colors","enableArea","translateX","xtitle","ytitle","layoutBottomAPT","LineChart","layout","data","id","defaultLineData","x","Date","toISOString","y","lineData","length","Line","_extends","Object","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","className","d","_ref4","_ref5","width","height","SvgPressureSensor","_ref","svgRef","title","titleId","props","xmlns","viewBox","ref","ForwardRef","propsTitleBarAPT","icon","type","propsTitleBarAPD","propsToasterDanger","description","numberOfAirSensors","_","range","map","el","text","value","getEndpoint","currentValueDropdown","timeRange","connectServer","a","timeRangeIsArray","Array","endpoint","filteredData","connectAPI","get","axiosAirPressure","toaster","danger","console","error","filename","post","processDataFromServer","dataFromServer","processDataDeck","run","getDataForDropdown","fallback","response","setCurrentValueDropdown","AirPressure","optionsDropdownAP","state","api","dataBottomAPD","average","avgTimeRange","avgPrevTimeRange","maxValue","minValue","dataTopAPD","dataBottomAPT","dataTopAPT","currentTimeRange","currentTimeRangeBottomAPD","currentTimeRangeBottomAPT","currentTimeRangeTopAPD","currentTimeRangeTopAPT","currentValueDropdownBottomAPD","currentValueDropdownBottomAPT","currentValueDropdownTopAPD","currentValueDropdownTopAPT","updateDropdownState","e","setState","prevState","dropdownSelector","nextUpdate","getDataFromServer","dataSelector","createContextValues","ids","baseContextValue","fallbackOptionsDropdownAP","updateDataOnScreen","timerID","setInterval","clearInterval","Promise","all","valueDropdown","contextValue","DeckTopAPD","units","DeckBottomAPD","DropdownAP","Dropdown","options","LineChartBottomAPT","LineChartTopAPT","styles","airPressure","left","top","GraphContext","Provider","GraphContainer","graph","dropdown","bottom","right","Component","ControlledDropdown","useContext","placeholder","selection","onChange","module","exports","CardWithoutFooter","HorizontalCards","cards","card","index","_ref2","_ref3","SvgPeakHigh","SvgPeakLow","Card","CardWithFooter","setFooterLabel","setFooterValue","Deck","Cards","label","previousValue"],"mappings":"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","file":"static/js/17.b1af979a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Line from \"../../../../UI/Graph/Line/Line\";\r\n\r\n/**\r\n * General notes:\r\n * The following objects are used to\r\n * customize graph templates (Line, \r\n * Bar, Pie), which can be found in the \r\n * UI folder. The graph templates are \r\n * based on nivo library ;)\r\n */\r\n\r\n\r\n/**\r\n * [layoutTopAPT]: Layout for air pressure sensor trend (location: top)\r\n */\r\nconst layoutTopAPT = {\r\n  colors: \"#86a315\",\r\n  enableArea: false,\r\n  translateX: -30,\r\n  xtitle: \"Date\",\r\n  ytitle: \"Air pressure (bar)\"\r\n};\r\n\r\n/**\r\n * [layoutBottomAPT]: Layout for air pressure sensor trend (location: bottom)\r\n */\r\nconst layoutBottomAPT = {\r\n  colors: \"#e37222\",\r\n  enableArea: false,\r\n  translateX: -30,\r\n  xtitle: \"Date\",\r\n  ytitle: \"Air pressure (bar)\"\r\n};\r\n\r\nconst LineChart = ({ data, id }) => {\r\n  let layout;\r\n\r\n  /**\r\n   * TopAPT: Air pressure sensor trend (location: top)\r\n   * BottomAPT: Air pressure sensor trend (location: bottom)\r\n   */\r\n  if (id === \"TopAPT\") layout = layoutTopAPT;\r\n  if (id === \"BottomAPT\") layout = layoutBottomAPT;\r\n\r\n  const defaultLineData = [\r\n    {\r\n      id,\r\n      data: [{ x: new Date().toISOString(), y: 0 }]\r\n    }\r\n  ];\r\n\r\n  /**\r\n  *  If express server provides no data, then use the default one.\r\n  */\r\n  const useServerData = typeof data[0].data != \"undefined\" && data[0].data.length > 0;\r\n  const lineData = useServerData ? data : defaultLineData;\r\n\r\n  return (\r\n    <Line {...layout} data={lineData} />\r\n  );\r\n};\r\n\r\nexport default LineChart;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \".cls-1{fill:#005293;}.cls-2{fill:none;}\"));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-1\",\n  d: \"M18.71,9.24a1,1,0,0,0-1.3.56h0l-1.63,4.06a2.17,2.17,0,1,0,2.38,1.94,2.24,2.24,0,0,0-.52-1.2l1.62-4.06A1,1,0,0,0,18.71,9.24Z\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-1\",\n  d: \"M16,2A14,14,0,1,0,30,16,14,14,0,0,0,16,2Zm9.4,14a9.39,9.39,0,0,1-3.5,7.31l1.84,1.84a11.94,11.94,0,0,1-15.48,0l1.85-1.84L8.69,21.89,6.85,23.74A11.86,11.86,0,0,1,4.05,17H6.67V15H4.05a11.86,11.86,0,0,1,2.8-6.74l1.84,1.85,1.42-1.42L8.26,6.85A11.86,11.86,0,0,1,15,4.05V6.67h2V4.05a11.86,11.86,0,0,1,6.74,2.8L21.89,8.69l1.42,1.42,1.84-1.85A11.89,11.89,0,0,1,28,15H25.34C25.34,15.33,25.4,15.66,25.4,16Z\"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"rect\", {\n  className: \"cls-2\",\n  width: 32,\n  height: 32\n});\n\nfunction SvgPressureSensor(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Ebene_1\",\n    \"data-name\": \"Ebene 1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 32 32\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4, _ref5);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPressureSensor);\nexport default __webpack_public_path__ + \"static/media/pressureSensor.cac302fe.svg\";\nexport { ForwardRef as ReactComponent };","import { ReactComponent as PressureSensor } from \"../../../../../assets/svg/pressureSensor.svg\";\r\n\r\nimport _ from \"lodash\";\r\n/**\r\n * [propsTitleBarAPT]: Title bar in \"Air pressure sensor\" (trend)\r\n * Title bar: Dropdown, icon and description text (type 3)\r\n */\r\nexport const propsTitleBarAPT = {\r\n  icon: <PressureSensor />,\r\n  title: \"Air pressure sensor\",\r\n  type: 3\r\n};\r\n\r\n/**\r\n * [propsTitleBarAPD]: Title bar in \"Air pressure sensor\" (deck)\r\n * Title bar: Dropdown, icon and description text (type 3)\r\n */\r\nexport const propsTitleBarAPD = {\r\n  icon: <PressureSensor />,\r\n  title: \"Air pressure sensor\",\r\n  type: 3\r\n};\r\n\r\n/**\r\n * [propsToasterDanger]: Alert configuration if API request fails\r\n */\r\nexport const propsToasterDanger = [\r\n  \"Error\",\r\n  {\r\n    description:\"Sensor device not found.\"\r\n  }\r\n];\r\n\r\n/**\r\n * [propsDropdownAC]: Air comsumption - dropdown options\r\n */\r\n const numberOfAirSensors = _.range(1, 7);\r\n const createOptionDropdownAP = el => ({ key: el, text: `AP-${el}`, value: el });\r\n const dropdownOptionsAP = _.map(numberOfAirSensors, createOptionDropdownAP);\r\n export const propsDropdownAP = { options: dropdownOptionsAP };","import connectAPI from \"../../../../../api/connectAPI\";\r\nimport processDataDeck from \"../../../../../utils/processDataDeck\";\r\nimport { axiosAirPressure } from \"../../../../../api/axios\";\r\nimport { propsToasterDanger } from \"./props\";\r\nimport { toaster } from \"evergreen-ui\";\r\n\r\n/**\r\n * This function works in conjuction with HTTP GET requests\r\n * @param {*} id Helps to determine the endpoint for API requests\r\n * @param {*} timeRange String with value of either \"day\", \"week\", \"month\"\r\n * @returns String containing the API endpoint\r\n */\r\nconst getEndpoint = (currentValueDropdown, id, timeRange) => {\r\n  let endpoint;\r\n\r\n  const isDayRequesFromDeck = (id === \"BottomAPD\" || id === \"TopAPD\");\r\n\r\n  if (isDayRequesFromDeck) {\r\n    endpoint = `/${currentValueDropdown}/deck-${timeRange}`;\r\n    return endpoint;\r\n  }\r\n\r\n  endpoint = `/${currentValueDropdown}/${timeRange}`;\r\n  return endpoint;\r\n};\r\n\r\n/**\r\n * \r\n * @param {*} id Helps to determine either the endpoint or filename for API requests\r\n * @param {*} timeRange String or array of two \"moment\" objects\r\n * @returns Data to feed line chart according to \"nivo\" library\r\n */\r\nconst connectServer = async (currentValueDropdown, id, timeRange) => {\r\n  /**\r\n   * Check is request comes from a control button or date picker\r\n   */\r\n  const timeRangeIsArray = timeRange instanceof Array;\r\n  const timeRangeIsString = typeof timeRange === \"string\";\r\n\r\n  /**\r\n   * If control button, then trigger HTTP GET requests\r\n   */\r\n  if (timeRangeIsString) {\r\n    const endpoint = getEndpoint(currentValueDropdown, id, timeRange);\r\n    let filteredData = false;\r\n    try {\r\n      filteredData = await connectAPI.get(axiosAirPressure, endpoint);\r\n    } catch (error) {\r\n      toaster.danger(...propsToasterDanger);\r\n      console.error(\"[connectServer]: Request to server API failed (GET)\");\r\n    }\r\n    return filteredData;\r\n  }\r\n\r\n  /**\r\n  * If date picker, then trigger HTTP POST requests\r\n  */\r\n  if (timeRangeIsArray) {\r\n    const filename = `sensor_air_pressure_${currentValueDropdown}.csv`;\r\n    let filteredData = false;\r\n    try {\r\n      filteredData = await connectAPI.post(axiosAirPressure, \"/\", { filename, timeRange })\r\n\r\n    } catch (error) {\r\n      toaster.danger(...propsToasterDanger);\r\n      console.error(\"[connectServer]: Request to server API failed (POST)\");\r\n    }\r\n    return filteredData;\r\n  }\r\n};\r\n\r\n/**\r\n * Data from server is either for \"trend\" or \"deck\" elements\r\n * If data is for a \"deck\" element, then further processing is needed\r\n * If data is for a \"trend\" element, then it goes straight forward\r\n */\r\nconst processDataFromServer = async (currentValueDropdown, id, timeRange) => {\r\n  let data;\r\n  const dataFromServer = await connectServer(currentValueDropdown, id, timeRange);\r\n\r\n  switch (id) {\r\n    case \"BottomAPD\":\r\n    case \"TopAPD\":\r\n      data = processDataDeck.run(dataFromServer, timeRange, 1);\r\n      break;\r\n    case \"BottomAPT\":\r\n    case \"TopAPT\":\r\n      data = dataFromServer;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return data;\r\n};\r\n\r\nexport default processDataFromServer;\r\n\r\nexport const getDataForDropdown = async (id, fallback) => {\r\n  let response = false;\r\n  try {\r\n    response = await axiosAirPressure.get(`/dropdowns/${id}`);\r\n  } catch (error) {\r\n    console.error(\"[getDataForDropdown]: Request to server API failed (GET)\");\r\n    return fallback;\r\n  }\r\n\r\n  return response.data;\r\n};\r\n","export const setCurrentValueDropdown = id => `currentValueDropdown${id}`;\r\n","import React, { Component } from \"react\";\r\nimport Deck from \"../../../UI/Deck/CustomDeck/CustomDeck_1\";\r\nimport Dropdown from \"../../../UI/Dropdown/Dropdown\";\r\nimport GraphContainer from \"../../../Container/GraphContainer\";\r\nimport GraphContext from \"../../../Context/GraphContext\";\r\nimport LineChart from \"./utilities/LineChart\";\r\nimport { Row, Col } from \"antd\";\r\n\r\nimport styles from \"./AirPressure.module.css\";\r\nimport processDataFromServer, { getDataForDropdown } from \"./utilities/handlersServer\";\r\nimport { setCurrentValueDropdown } from \"./utilities/miscellaneous\";\r\nimport { propsTitleBarAPT, propsTitleBarAPD, propsDropdownAP } from \"./utilities/props\";\r\n\r\nclass AirPressure extends Component {\r\n  /**\r\n   * Class fields (Belong to the class itself. Prototype chain not affected) \r\n   * These fields are used by the server to set options for dropdown elements\r\n   */\r\n   optionsDropdownAP = [{ key: 1, text: \"AP1\", value: 1 }];\r\n\r\n  /**\r\n  * [api]: Contains received data from express server\r\n  * [currentTimeRange]: Contains selected time frame for trend and deck elements\r\n  * [currentValueDropdown]: Contains current value of dropdown for trend and deck elements\r\n  * [dataBottomAPD, dataBottomAPT, dataTopAPD, dataTopAPT]: Holds data for \"sensor_air_pressure_x.csv\"\r\n  * The \"x\" represents the sensor location\r\n  */\r\n  state = {\r\n    api: {\r\n      dataBottomAPD: {\r\n        average: {\r\n          avgTimeRange: 0,\r\n          avgPrevTimeRange: 0\r\n        },\r\n        maxValue: 0,\r\n        minValue: 0\r\n      },\r\n      dataTopAPD: {\r\n        average: {\r\n          avgTimeRange: 0,\r\n          avgPrevTimeRange: 0\r\n        },\r\n        maxValue: 0,\r\n        minValue: 0\r\n      },\r\n      dataBottomAPT: [],\r\n      dataTopAPT: []\r\n    },\r\n    currentTimeRange: {\r\n      currentTimeRangeBottomAPD: \"week\",\r\n      currentTimeRangeBottomAPT: \"week\",\r\n      currentTimeRangeTopAPD: \"week\",\r\n      currentTimeRangeTopAPT: \"week\"\r\n    },\r\n    currentValueDropdown: {\r\n      currentValueDropdownBottomAPD: 1,\r\n      currentValueDropdownBottomAPT: 1,\r\n      currentValueDropdownTopAPD: 1,\r\n      currentValueDropdownTopAPT: 1,\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 1. Fetch data when component mounts for the first time\r\n   * 2. Triggers automatic updates every \"x\" milliseconds\r\n   */\r\n  async componentDidMount() {\r\n    // Load options for dropdowns\r\n    const fallbackOptionsDropdownAP = [{ key: 1, text: \"AP1\", value: 1 }];\r\n    this.optionsDropdownAP = await getDataForDropdown(\"air-pressure\", fallbackOptionsDropdownAP);\r\n\r\n    this.updateDataOnScreen();\r\n    this.timerID = setInterval(() => this.updateDataOnScreen(), 3600000);\r\n  }\r\n\r\n  // If component unmounts, then free memory resources\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n  /**\r\n   * [updateDataOnScreen]: Trigger screen updates every \"x\" millisenconds\r\n   */\r\n  async updateDataOnScreen() {\r\n    // Define id's to target all UI elements\r\n    const { currentTimeRange, currentValueDropdown } = this.state;\r\n    const ids = [\"BottomAPD\", \"BottomAPT\", \"TopAPD\", \"TopAPT\"];\r\n\r\n    // Get data for all elements\r\n    const data = await Promise.all(ids.map(async (id) => {\r\n      const valueDropdown = currentValueDropdown[`currentValueDropdown${id}`];\r\n      const timeRange = currentTimeRange[`currentTimeRange${id}`];\r\n      return await processDataFromServer(valueDropdown, id, timeRange);\r\n    }));\r\n\r\n    // Update state for all components\r\n    this.setState(\r\n      {\r\n        api:\r\n        {\r\n          dataBottomAPD: data[0],\r\n          dataBottomAPT: data[1],\r\n          dataTopAPD: data[2],\r\n          dataTopAPT: data[3]\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * [updateDropdownState]: Update value of dropdown element\r\n   * [id]: Helps to determine the correct dropdown element\r\n   * [value]: Value of dropdown element\r\n   * [e]: Synthetic event. The event is used internally by UI library \r\n   */\r\n  updateDropdownState = (e, { value }, id) => this.setState(prevState => {\r\n    const dropdownSelector = `currentValueDropdown${id}`;\r\n    const nextUpdate = { ...prevState };\r\n    nextUpdate.currentValueDropdown[dropdownSelector] = value;\r\n    return { nextUpdate };\r\n  })\r\n\r\n  /**\r\n   * [getDataFromServer]: Establish connection to express server via HTTP requests (GET, POST)\r\n   * [id]: Helps to determine the correct endpoint, filename and axios instance\r\n   * [timeRange]: It can be a string (\"day\", \"week\", \"month\") or an array of two \"moment\" objects\r\n   */\r\n  getDataFromServer = async (id, timeRange) => {\r\n    // Update value of selected dropdown\r\n    const currentValueDropdown = this.state.currentValueDropdown[setCurrentValueDropdown(id)];\r\n\r\n    /**\r\n     * Response data from server API. The data is formatted \r\n     * based on nivo library. If an error comes up, then \r\n     * \"data\" is \"false\". Though I can exit the function at \r\n     * this point, I'll let it continue. Trends and deck \r\n     * elements handle the event of no-data using fallback data \r\n     */\r\n    const data = await processDataFromServer(currentValueDropdown, id, timeRange);\r\n\r\n    // Update state of all elements\r\n    this.setState(prevState => {\r\n      const nextUpdate = { ...prevState };\r\n      const dataSelector = `data${id}`;\r\n      const currentTimeRange = `currentTimeRange${id}`;\r\n      nextUpdate.currentTimeRange[currentTimeRange] = timeRange;\r\n      nextUpdate.api[dataSelector] = data;\r\n      return { nextUpdate };\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @param {*} ids Arrays of ids (i.e \"BottomAPD\", \"BottomAPT\", \"TopAPD\", \"TopAPT\")\r\n   * @returns Array of context values for graphs\r\n   */\r\n  createContextValues = (ids) => {\r\n    const { currentValueDropdown } = this.state;\r\n    const { getDataFromServer, updateDropdownState } = this;\r\n    const baseContextValue = { getDataFromServer, updateDropdownState };\r\n\r\n    return ids.map(id => (\r\n      {\r\n        ...baseContextValue,\r\n        id,\r\n        currentValueDropdown: currentValueDropdown[`currentValueDropdown${id}`]\r\n      }\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    // Extract some class methods / fields\r\n    const { createContextValues, optionsDropdownAP } = this;\r\n\r\n    // Data from API\r\n    const { dataBottomAPD, dataBottomAPT, dataTopAPD, dataTopAPT } = this.state.api;\r\n\r\n    // Current time range for elements\r\n    const { currentTimeRangeBottomAPD, currentTimeRangeTopAPD } = this.state.currentTimeRange;\r\n\r\n    // Create context values\r\n    const ids = [\"TopAPT\", \"BottomAPT\", \"TopAPD\", \"BottomAPD\"];\r\n    const contextValue = createContextValues(ids);\r\n\r\n    // Deck UI components\r\n    const DeckTopAPD = <Deck data={dataTopAPD} timeRange={currentTimeRangeTopAPD} units=\"bar\" />;\r\n    const DeckBottomAPD = <Deck data={dataBottomAPD} timeRange={currentTimeRangeBottomAPD} units=\"bar\" />;\r\n\r\n    // Dropdown UI components\r\n    // const DropdownAP = <Dropdown {...propsDropdownAP} />\r\n    const DropdownAP = <Dropdown options={optionsDropdownAP} />\r\n\r\n    // Line chart UI components\r\n    const LineChartBottomAPT = <LineChart id=\"BottomAPT\" data={[{ id: \"Air pressure\", data: dataBottomAPT }]} />;\r\n    const LineChartTopAPT = <LineChart id=\"TopAPT\" data={[{ id: \"Air pressure\", data: dataTopAPT }]} />;\r\n\r\n    return (\r\n      <Row className={styles.airPressure}>\r\n        <Col className={styles.left}>\r\n          <div className={styles.top}>\r\n            <GraphContext.Provider value={contextValue[0]}>\r\n              <GraphContainer {...propsTitleBarAPT} graph={LineChartTopAPT} dropdown={DropdownAP} />\r\n            </GraphContext.Provider>\r\n          </div>\r\n\r\n          <div className={styles.bottom}>\r\n            <GraphContext.Provider value={contextValue[1]}>\r\n              <GraphContainer {...propsTitleBarAPT} graph={LineChartBottomAPT} dropdown={DropdownAP} />\r\n            </GraphContext.Provider>\r\n          </div>\r\n        </Col>\r\n\r\n        <Col className={styles.right}>\r\n          <div className={styles.top}>\r\n            <GraphContext.Provider value={contextValue[2]}>\r\n              <GraphContainer {...propsTitleBarAPD} graph={DeckTopAPD} dropdown={DropdownAP} />\r\n            </GraphContext.Provider>\r\n          </div>\r\n\r\n          <div className={styles.bottom}>\r\n            <GraphContext.Provider value={contextValue[3]}>\r\n              <GraphContainer {...propsTitleBarAPD} graph={DeckBottomAPD} dropdown={DropdownAP} />\r\n            </GraphContext.Provider>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AirPressure;","import React, { useContext } from \"react\";\r\nimport { Dropdown } from 'semantic-ui-react';\r\nimport GraphContext  from \"../../Context/GraphContext\";\r\n\r\nimport styles from \"./Dropdown.module.css\";\r\n\r\nconst ControlledDropdown = ({ options }) => {\r\n\r\n  const { id, currentValueDropdown, updateDropdownState } = useContext(GraphContext);\r\n\r\n  return (\r\n    <Dropdown\r\n      className={styles.dropdown}\r\n      options={options}\r\n      placeholder=\"Select\"\r\n      selection\r\n      onChange={(e, { value }) => updateDropdownState(e, { value }, id)}\r\n      value={currentValueDropdown}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ControlledDropdown;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown\":\"Dropdown_dropdown__37I9C\"};","import React from \"react\";\r\n\r\nimport \"./CardWithoutFooter.css\";\r\n\r\nconst CardWithoutFooter = ({ icon, units, value }) => {\r\n\r\n  return (\r\n    <div className=\"cardWithoutFooter\">\r\n      <div className=\"header\">{icon}</div>\r\n      <div className=\"content\">\r\n          <span className=\"value\">{value}</span>\r\n          <span className=\"units\">{units}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardWithoutFooter;","import React from \"react\";\r\n\r\nimport \"./HorizontalCards.css\"\r\n\r\nconst HorizontalCards = ({ cards }) => {\r\n  return (\r\n    <div className=\"deck\">\r\n      {\r\n        cards.map((card, index) => <div key={index} className=\"cardBox\">{card}</div>)\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HorizontalCards;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \".cls-1{fill:#005293;}.cls-2{fill:none;}\"));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-1\",\n  d: \"M4,4V6H28V4Zm12,5.7-5.62,4.5a1,1,0,0,0,1.24,1.56L15,13.08V28h2V13.08l3.38,2.7A1,1,0,0,0,21,16a1,1,0,0,0,.78-.38,1,1,0,0,0-.16-1.4Z\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"rect\", {\n  className: \"cls-2\",\n  width: 32,\n  height: 32\n});\n\nfunction SvgPeakHigh(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Ebene_1\",\n    \"data-name\": \"Ebene 1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 32 32\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPeakHigh);\nexport default __webpack_public_path__ + \"static/media/peakHigh.1aacdae3.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \".cls-1{fill:#005293;}.cls-2{fill:none;}\"));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-1\",\n  d: \"M4,26v2H28V26Zm12-3.72,5.62-4.5a1,1,0,1,0-1.24-1.56L17,18.92V4H15V18.92l-3.38-2.7a1,1,0,0,0-1.24,1.56Z\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"rect\", {\n  className: \"cls-2\",\n  width: 32,\n  height: 32\n});\n\nfunction SvgPeakLow(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Ebene_1\",\n    \"data-name\": \"Ebene 1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 32 32\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPeakLow);\nexport default __webpack_public_path__ + \"static/media/peakLow.88bbd4be.svg\";\nexport { ForwardRef as ReactComponent };","import CardWithFooter from \"../CardWithFooter/CardWithFooter\";\r\nimport CardWithoutFooter from \"../CardWithoutFooter/CardWithoutFooter\";\r\n\r\nimport { ReactComponent as Average } from \"../../../../assets/svg/average.svg\";\r\nimport { ReactComponent as PeakHigh } from \"../../../../assets/svg/peakHigh.svg\";\r\nimport { ReactComponent as PeakLow } from \"../../../../assets/svg/peakLow.svg\";\r\n\r\n/**\r\n * This component was designed to work in \r\n * conjuntion with \"CustomDeck_1\" component\r\n */\r\nconst Card = (props) => {\r\n  if (props.type === 1) {\r\n    return (\r\n      <CardWithFooter\r\n        {...props}\r\n        icon={<Average />}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (props.type === 2) {\r\n    return (\r\n      <CardWithoutFooter\r\n        {...props}\r\n        icon={<PeakHigh />}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (props.type === 3) {\r\n    return (\r\n      <CardWithoutFooter\r\n        {...props}\r\n        icon={<PeakLow />}\r\n      />\r\n    );\r\n  }\r\n};\r\n\r\nexport default Card;\r\n","import React, { Fragment } from \"react\";\r\nimport Card from \"../../Card/CustomCard/CustomCard_1\";\r\nimport HorizontalCards from \"../../Cards/HorizontalCards/HorizontalCards\";\r\n\r\nimport processDataDeck from \"../../../../utils/processDataDeck\";\r\n\r\n\r\nconst { setFooterLabel, setFooterValue } = processDataDeck;\r\n\r\n/**\r\n * This component was designed to work in conjuntion with \r\n * the \"CustomCard_1\" component. It renders card elements \r\n * for showing average, maximum and minimum values. It can\r\n * be found on the following screens:\r\n * \"Air pressure\"\r\n * \"Humidity and temperature\"\r\n * \"Electricity and air\"\r\n */\r\nconst Deck = ({ data, timeRange, units }) => {\r\n  // The structure \"data\" is defined by the \"state\" object of each \"Screen\" component\r\n  const { avgTimeRange, avgPrevTimeRange } = data.average;\r\n\r\n  /**\r\n   *  Configuration for each \"Card\" element.\r\n   *  1st element: Blue card showing current and previous values\r\n   *  2nd element: Maximum value based on provided data\r\n   *  3rd element: Minimum value based on provided data\r\n   */\r\n  const configDeck = [\r\n    {\r\n      label: setFooterLabel(timeRange, avgTimeRange, avgPrevTimeRange),\r\n      previousValue: setFooterValue(timeRange, avgPrevTimeRange, units),\r\n      type: 1,\r\n      value: avgTimeRange,\r\n      units\r\n    },\r\n    {\r\n      type: 2,\r\n      value: data.maxValue,\r\n      units\r\n    },\r\n    {\r\n      type: 3,\r\n      value: data.minValue,\r\n      units\r\n    }\r\n  ];\r\n\r\n  const Cards = configDeck.map(el => <Card {...el} />);\r\n\r\n  // Custom deck UI component\r\n  return (\r\n    <Fragment>\r\n      <HorizontalCards cards={Cards} />\r\n    </Fragment>\r\n  );\r\n\r\n};\r\n\r\nexport default Deck;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"airPressure\":\"AirPressure_airPressure__2KvcW\",\"left\":\"AirPressure_left__GWTwf\",\"top\":\"AirPressure_top__11eQ_\",\"bottom\":\"AirPressure_bottom__11zZl\",\"right\":\"AirPressure_right__3Gvca\"};"],"sourceRoot":""}